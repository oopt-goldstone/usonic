on:
    push:
        branches:
        - master
        - 201811
        - 201904
    pull_request:
        branches:
        - master
        - 201811
        - 201904
env:
    K: sudo k3s kubectl
jobs:
    build:
        runs-on: ubuntu-latest

        permissions:
          contents: read
          packages: write

        steps:
        - uses: docker/setup-buildx-action@v1
          id: buildx
        - name: Login to GitHub Container Registry
          uses: docker/login-action@v2
          with:
            registry: ghcr.io
            username: ${{ github.actor }}
            password: ${{ secrets.GITHUB_TOKEN }}
        - name: install k3s
          run: curl -sfL https://get.k3s.io | sh -s - --docker
        - uses: actions/checkout@v2
        - run: git submodule update --init --recursive sm/sonic-py-swsssdk sm/sonic-sairedis sm/sonic-swss sm/sonic-swss-common sm/sonic-utilities sm/sonic-frr sm/sonic-dbsyncd
        - run: git submodule update --init sm/sonic-buildimage
        - name: Cache Docker layers
          uses: actions/cache@v2
          with:
            path: /tmp/.buildx-cache
            key: ${{ github.ref }}-${{ github.sha }}
            restore-keys: |
              ${{ github.ref }}-${{ github.sha }}
              ${{ github.ref }}
              refs/head/${{ github.event.pull_request.base.ref }}
        - name: Docker meta for run-image
          id: meta_run
          uses: docker/metadata-action@v4
          with:
            images: ghcr.io/oopt-goldstone/usonic
        - name: Build run-image
          uses: docker/build-push-action@v4
          with:
            context: ./
            file: ./docker/build.Dockerfile
            target: run
            builder: ${{ steps.buildx.outputs.name }}
            tags: ${{ steps.meta_run.outputs.tags }}
            labels: ${{ steps.meta_run.outputs.labels }}
            cache-from: type=gha
            cache-to: type=gha,mode=max
            push: true
        - name: Docker meta for debug-image
          id: meta_debug
          uses: docker/metadata-action@v4
          with:
            images: ghcr.io/oopt-goldstone/usonic-debug
        - name: Build debug-image
          uses: docker/build-push-action@v4
          with:
            context: ./
            file: ./docker/build.Dockerfile
            target: debug
            builder: ${{ steps.buildx.outputs.name }}
            tags: ${{ steps.meta_debug.outputs.tags }}
            labels: ${{ steps.meta_debug.outputs.labels }}
            cache-from: type=gha
            cache-to: type=gha,mode=max
            push: true
        - uses: imranismail/setup-kustomize@v1
        - run: |
            cd k8s && kustomize edit set image ghcr.io/oopt-goldstone/usonic-debug:latest=${{ steps.meta_debug.outputs.tags }}
        - run: |
            $K apply -k ./k8s
            while [ true ]
            do
              sleep 10
              $K get pods || true
              ($K exec usonic-cli -- show interface status | grep Ethernet1) && exit 0 || true
            done
        - run: |
            $K exec usonic-cli -- show interface status
            $K exec usonic-cli -- config vlan add 1000
            $K exec usonic-cli -- config vlan member add 1000 Ethernet1 -u
            $K exec usonic-cli -- config vlan member add 1000 Ethernet2 -u
            $K exec usonic-cli -- show vlan brief
